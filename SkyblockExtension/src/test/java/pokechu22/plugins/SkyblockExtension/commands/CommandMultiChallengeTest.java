package pokechu22.plugins.SkyblockExtension.commands;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import static junitparams.JUnitParamsRunner.$;

import static pokechu22.plugins.SkyblockExtension.commands
		.CommandMultiChallenge.MultiChallengeRoundingMode.*;

import junitparams.JUnitParamsRunner;
import junitparams.Parameters;

import org.junit.Test;
import org.junit.runner.RunWith;

import pokechu22.plugins.SkyblockExtension.commands
		.CommandMultiChallenge.MultiChallengeRoundingMode;

@RunWith(JUnitParamsRunner.class)
public class CommandMultiChallengeTest {
	@Test
	@Parameters(method="paramsFor_roundModeTest")
	public void roundModeTest(MultiChallengeRoundingMode mode,
			int quantity, int times, float tax, int expected) {
		assertThat(mode.apply(quantity, times, tax), is(expected));
	}
	
	@SuppressWarnings("unused")
	private Object[] paramsFor_roundModeTest() {
		return $(
			//Round up lossy
			$(ROUND_UP_LOSSY, 0, 1, 1f, 0),
			$(ROUND_UP_LOSSY, 0, 1, .9f, 0),
			$(ROUND_UP_LOSSY, 0, 1, .5f, 0),
			$(ROUND_UP_LOSSY, 0, 1, .1f, 0),
			$(ROUND_UP_LOSSY, 0, 1, 0f, 0),
			$(ROUND_UP_LOSSY, 1, 1, 1f, 1),
			$(ROUND_UP_LOSSY, 1, 1, .9f, 1),
			$(ROUND_UP_LOSSY, 1, 1, .5f, 1),
			$(ROUND_UP_LOSSY, 1, 1, .1f, 1),
			$(ROUND_UP_LOSSY, 1, 1, 0f, 0),
			$(ROUND_UP_LOSSY, 2, 1, 1f, 2),
			$(ROUND_UP_LOSSY, 2, 1, .9f, 2),
			$(ROUND_UP_LOSSY, 2, 1, .5f, 1),
			$(ROUND_UP_LOSSY, 2, 1, .1f, 1),
			$(ROUND_UP_LOSSY, 2, 1, 0f, 0),
			$(ROUND_UP_LOSSY, 1, 0, 1f, 0),
			$(ROUND_UP_LOSSY, 1, 0, .9f, 0),
			$(ROUND_UP_LOSSY, 1, 0, .5f, 0),
			$(ROUND_UP_LOSSY, 1, 0, .1f, 0),
			$(ROUND_UP_LOSSY, 1, 0, 0f, 0),
			$(ROUND_UP_LOSSY, 1, 1, 1f, 1),
			$(ROUND_UP_LOSSY, 1, 1, .9f, 1),
			$(ROUND_UP_LOSSY, 1, 1, .5f, 1),
			$(ROUND_UP_LOSSY, 1, 1, .1f, 1),
			$(ROUND_UP_LOSSY, 1, 1, 0f, 0),
			$(ROUND_UP_LOSSY, 1, 2, 1f, 2),
			$(ROUND_UP_LOSSY, 1, 2, .9f, 2),
			$(ROUND_UP_LOSSY, 1, 2, .5f, 2),
			$(ROUND_UP_LOSSY, 1, 2, .1f, 2),
			$(ROUND_UP_LOSSY, 1, 2, 0f, 0),
			//Round up keep
			$(ROUND_UP_KEEP, 0, 1, 1f, 0),
			$(ROUND_UP_KEEP, 0, 1, .9f, 0),
			$(ROUND_UP_KEEP, 0, 1, .5f, 0),
			$(ROUND_UP_KEEP, 0, 1, .1f, 0),
			$(ROUND_UP_KEEP, 0, 1, 0f, 0),
			$(ROUND_UP_KEEP, 1, 1, 1f, 1),
			$(ROUND_UP_KEEP, 1, 1, .9f, 1),
			$(ROUND_UP_KEEP, 1, 1, .5f, 1),
			$(ROUND_UP_KEEP, 1, 1, .1f, 1),
			$(ROUND_UP_KEEP, 1, 1, 0f, 0),
			$(ROUND_UP_KEEP, 2, 1, 1f, 2),
			$(ROUND_UP_KEEP, 2, 1, .9f, 2),
			$(ROUND_UP_KEEP, 2, 1, .5f, 1),
			$(ROUND_UP_KEEP, 2, 1, .1f, 1),
			$(ROUND_UP_KEEP, 2, 1, 0f, 0),
			$(ROUND_UP_KEEP, 1, 0, 1f, 0),
			$(ROUND_UP_KEEP, 1, 0, .9f, 0),
			$(ROUND_UP_KEEP, 1, 0, .5f, 0),
			$(ROUND_UP_KEEP, 1, 0, .1f, 0),
			$(ROUND_UP_KEEP, 1, 0, 0f, 0),
			$(ROUND_UP_KEEP, 1, 1, 1f, 1),
			$(ROUND_UP_KEEP, 1, 1, .9f, 1),
			$(ROUND_UP_KEEP, 1, 1, .5f, 1),
			$(ROUND_UP_KEEP, 1, 1, .1f, 1),
			$(ROUND_UP_KEEP, 1, 1, 0f, 0),
			$(ROUND_UP_KEEP, 1, 2, 1f, 2),
			$(ROUND_UP_KEEP, 1, 2, .9f, 2),
			$(ROUND_UP_KEEP, 1, 2, .5f, 1),
			$(ROUND_UP_KEEP, 1, 2, .1f, 1),
			$(ROUND_UP_KEEP, 1, 2, 0f, 0),
			//Round nearest lossy
			$(ROUND_NEAREST_LOSSY, 0, 1, 1f, 0),
			$(ROUND_NEAREST_LOSSY, 0, 1, .9f, 0),
			$(ROUND_NEAREST_LOSSY, 0, 1, .5f, 0),
			$(ROUND_NEAREST_LOSSY, 0, 1, .1f, 0),
			$(ROUND_NEAREST_LOSSY, 0, 1, 0f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 1, 1f, 1),
			$(ROUND_NEAREST_LOSSY, 1, 1, .9f, 1),
			$(ROUND_NEAREST_LOSSY, 1, 1, .5f, 1),
			$(ROUND_NEAREST_LOSSY, 1, 1, .1f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 1, 0f, 0),
			$(ROUND_NEAREST_LOSSY, 2, 1, 1f, 2),
			$(ROUND_NEAREST_LOSSY, 2, 1, .9f, 2),
			$(ROUND_NEAREST_LOSSY, 2, 1, .5f, 1),
			$(ROUND_NEAREST_LOSSY, 2, 1, .1f, 0),
			$(ROUND_NEAREST_LOSSY, 2, 1, 0f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 0, 1f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 0, .9f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 0, .5f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 0, .1f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 0, 0f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 1, 1f, 1),
			$(ROUND_NEAREST_LOSSY, 1, 1, .9f, 1),
			$(ROUND_NEAREST_LOSSY, 1, 1, .5f, 1),
			$(ROUND_NEAREST_LOSSY, 1, 1, .1f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 1, 0f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 2, 1f, 2),
			$(ROUND_NEAREST_LOSSY, 1, 2, .9f, 2),
			$(ROUND_NEAREST_LOSSY, 1, 2, .5f, 2),
			$(ROUND_NEAREST_LOSSY, 1, 2, .1f, 0),
			$(ROUND_NEAREST_LOSSY, 1, 2, 0f, 0),
			//Round nearest keep
			$(ROUND_NEAREST_KEEP, 0, 1, 1f, 0),
			$(ROUND_NEAREST_KEEP, 0, 1, .9f, 0),
			$(ROUND_NEAREST_KEEP, 0, 1, .5f, 0),
			$(ROUND_NEAREST_KEEP, 0, 1, .1f, 0),
			$(ROUND_NEAREST_KEEP, 0, 1, 0f, 0),
			$(ROUND_NEAREST_KEEP, 1, 1, 1f, 1),
			$(ROUND_NEAREST_KEEP, 1, 1, .9f, 1),
			$(ROUND_NEAREST_KEEP, 1, 1, .5f, 1),
			$(ROUND_NEAREST_KEEP, 1, 1, .1f, 0),
			$(ROUND_NEAREST_KEEP, 1, 1, 0f, 0),
			$(ROUND_NEAREST_KEEP, 2, 1, 1f, 2),
			$(ROUND_NEAREST_KEEP, 2, 1, .9f, 2),
			$(ROUND_NEAREST_KEEP, 2, 1, .5f, 1),
			$(ROUND_NEAREST_KEEP, 2, 1, .1f, 0),
			$(ROUND_NEAREST_KEEP, 2, 1, 0f, 0),
			$(ROUND_NEAREST_KEEP, 1, 0, 1f, 0),
			$(ROUND_NEAREST_KEEP, 1, 0, .9f, 0),
			$(ROUND_NEAREST_KEEP, 1, 0, .5f, 0),
			$(ROUND_NEAREST_KEEP, 1, 0, .1f, 0),
			$(ROUND_NEAREST_KEEP, 1, 0, 0f, 0),
			$(ROUND_NEAREST_KEEP, 1, 1, 1f, 1),
			$(ROUND_NEAREST_KEEP, 1, 1, .9f, 1),
			$(ROUND_NEAREST_KEEP, 1, 1, .5f, 1),
			$(ROUND_NEAREST_KEEP, 1, 1, .1f, 0),
			$(ROUND_NEAREST_KEEP, 1, 1, 0f, 0),
			$(ROUND_NEAREST_KEEP, 1, 2, 1f, 2),
			$(ROUND_NEAREST_KEEP, 1, 2, .9f, 2),
			$(ROUND_NEAREST_KEEP, 1, 2, .5f, 1),
			$(ROUND_NEAREST_KEEP, 1, 2, .1f, 0),
			$(ROUND_NEAREST_KEEP, 1, 2, 0f, 0),
			//Round down lossy
			$(ROUND_DOWN_LOSSY, 0, 1, 1f, 0),
			$(ROUND_DOWN_LOSSY, 0, 1, .9f, 0),
			$(ROUND_DOWN_LOSSY, 0, 1, .5f, 0),
			$(ROUND_DOWN_LOSSY, 0, 1, .1f, 0),
			$(ROUND_DOWN_LOSSY, 0, 1, 0f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, 1f, 1),
			$(ROUND_DOWN_LOSSY, 1, 1, .9f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, .5f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, .1f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, 0f, 0),
			$(ROUND_DOWN_LOSSY, 2, 1, 1f, 2),
			$(ROUND_DOWN_LOSSY, 2, 1, .9f, 1),
			$(ROUND_DOWN_LOSSY, 2, 1, .5f, 1),
			$(ROUND_DOWN_LOSSY, 2, 1, .1f, 0),
			$(ROUND_DOWN_LOSSY, 2, 1, 0f, 0),
			$(ROUND_DOWN_LOSSY, 1, 0, 1f, 0),
			$(ROUND_DOWN_LOSSY, 1, 0, .9f, 0),
			$(ROUND_DOWN_LOSSY, 1, 0, .5f, 0),
			$(ROUND_DOWN_LOSSY, 1, 0, .1f, 0),
			$(ROUND_DOWN_LOSSY, 1, 0, 0f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, 1f, 1),
			$(ROUND_DOWN_LOSSY, 1, 1, .9f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, .5f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, .1f, 0),
			$(ROUND_DOWN_LOSSY, 1, 1, 0f, 0),
			$(ROUND_DOWN_LOSSY, 1, 2, 1f, 2),
			$(ROUND_DOWN_LOSSY, 1, 2, .9f, 0),
			$(ROUND_DOWN_LOSSY, 1, 2, .5f, 0),
			$(ROUND_DOWN_LOSSY, 1, 2, .1f, 0),
			$(ROUND_DOWN_LOSSY, 1, 2, 0f, 0),
			//Round down keep
			$(ROUND_DOWN_KEEP, 0, 1, 1f, 0),
			$(ROUND_DOWN_KEEP, 0, 1, .9f, 0),
			$(ROUND_DOWN_KEEP, 0, 1, .5f, 0),
			$(ROUND_DOWN_KEEP, 0, 1, .1f, 0),
			$(ROUND_DOWN_KEEP, 0, 1, 0f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, 1f, 1),
			$(ROUND_DOWN_KEEP, 1, 1, .9f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, .5f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, .1f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, 0f, 0),
			$(ROUND_DOWN_KEEP, 2, 1, 1f, 2),
			$(ROUND_DOWN_KEEP, 2, 1, .9f, 1),
			$(ROUND_DOWN_KEEP, 2, 1, .5f, 1),
			$(ROUND_DOWN_KEEP, 2, 1, .1f, 0),
			$(ROUND_DOWN_KEEP, 2, 1, 0f, 0),
			$(ROUND_DOWN_KEEP, 1, 0, 1f, 0),
			$(ROUND_DOWN_KEEP, 1, 0, .9f, 0),
			$(ROUND_DOWN_KEEP, 1, 0, .5f, 0),
			$(ROUND_DOWN_KEEP, 1, 0, .1f, 0),
			$(ROUND_DOWN_KEEP, 1, 0, 0f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, 1f, 1),
			$(ROUND_DOWN_KEEP, 1, 1, .9f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, .5f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, .1f, 0),
			$(ROUND_DOWN_KEEP, 1, 1, 0f, 0),
			$(ROUND_DOWN_KEEP, 1, 2, 1f, 2),
			$(ROUND_DOWN_KEEP, 1, 2, .9f, 1),
			$(ROUND_DOWN_KEEP, 1, 2, .5f, 1),
			$(ROUND_DOWN_KEEP, 1, 2, .1f, 0),
			$(ROUND_DOWN_KEEP, 1, 2, 0f, 0)
		);
	}
}
